<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlion.life.base.dao.WaterMapper">
  <resultMap id="BaseResultMap" type="com.dlion.life.base.entity.Water">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="account_type" jdbcType="TINYINT" property="accountType" />
    <result column="change_type" jdbcType="TINYINT" property="changeType" />
    <result column="consumption_type" jdbcType="TINYINT" property="consumptionType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, amount, account_type, change_type, consumption_type, remark, create_time, update_time
  </sql>
  <select id="selectByCon" parameterType="com.dlion.life.base.entity.Water" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from water
  </select>
  <delete id="deleteById" parameterType="integer">
    delete from water
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.dlion.life.base.entity.Water">
    insert into water (id, user_id, amount, 
      account_type, change_type, consumption_type, 
      remark
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{accountType,jdbcType=TINYINT}, #{changeType,jdbcType=TINYINT}, #{consumptionType,jdbcType=TINYINT}, 
      #{account.remark,jdbcType=VARCHAR}
  </insert>
  <insert id="insertSelective" parameterType="com.dlion.life.base.entity.Water">
    insert into water
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="changeType != null">
        change_type,
      </if>
      <if test="consumptionType != null">
        consumption_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="changeType != null">
        #{changeType,jdbcType=TINYINT},
      </if>
      <if test="consumptionType != null">
        #{consumptionType,jdbcType=TINYINT},
      </if>
      <if test="remark != null and remark != ''">
        #{account.remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCon" parameterType="com.dlion.life.base.entity.Water" resultType="java.lang.Long">
    select count(*) from water
  </select>
    <select id="selectByTime" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from water
      where
      user_id = #{userId,jdbcType=INTEGER}
      and create_time <![CDATA[ >= ]]> #{startTime,jdbcType=TIMESTAMP}
      and create_time <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}
    </select>

</mapper>