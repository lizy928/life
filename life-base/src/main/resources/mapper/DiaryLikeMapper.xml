<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlion.life.base.dao.DiaryLikeMapper" >
  <resultMap id="BaseResultMap" type="com.dlion.life.base.entity.DiaryLike" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="diary_id" property="diaryId" jdbcType="INTEGER" />
    <result column="liked_user_id" property="likedUserId" jdbcType="INTEGER" />
    <result column="admirer_id" property="admirerId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, diary_id, liked_user_id, admirer_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from diary_like
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="seleteByDiaryIdAndUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from diary_like
    where diary_id = #{diaryId,jdbcType=INTEGER}
    and admirer_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="listByDiaryId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from diary_like
    where diary_id = #{diaryId,jdbcType=INTEGER}
    limit 10
  </select>
    <select id="listByAdmirerId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from diary_like
      where admirer_id = #{admirerId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from diary_like
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dlion.life.base.entity.DiaryLike" >
    insert into diary_like (id, diary_id, liked_user_id, 
      admirer_id, create_time)
    values (#{id,jdbcType=INTEGER}, #{diaryId,jdbcType=INTEGER}, #{likedUserId,jdbcType=INTEGER}, 
      #{admirerId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dlion.life.base.entity.DiaryLike" useGeneratedKeys="true" keyProperty="id">
    insert into diary_like
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="diaryId != null" >
        diary_id,
      </if>
      <if test="likedUserId != null" >
        liked_user_id,
      </if>
      <if test="admirerId != null" >
        admirer_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="diaryId != null" >
        #{diaryId,jdbcType=INTEGER},
      </if>
      <if test="likedUserId != null" >
        #{likedUserId,jdbcType=INTEGER},
      </if>
      <if test="admirerId != null" >
        #{admirerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlion.life.base.entity.DiaryLike" >
    update diary_like
    <set >
      <if test="diaryId != null" >
        diary_id = #{diaryId,jdbcType=INTEGER},
      </if>
      <if test="likedUserId != null" >
        liked_user_id = #{likedUserId,jdbcType=INTEGER},
      </if>
      <if test="admirerId != null" >
        admirer_id = #{admirerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlion.life.base.entity.DiaryLike" >
    update diary_like
    set diary_id = #{diaryId,jdbcType=INTEGER},
      liked_user_id = #{likedUserId,jdbcType=INTEGER},
      admirer_id = #{admirerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>